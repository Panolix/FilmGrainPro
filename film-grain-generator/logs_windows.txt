2025-08-06T06:19:19.6072435Z Current runner version: '2.327.1'
2025-08-06T06:19:19.6105549Z ##[group]Runner Image Provisioner
2025-08-06T06:19:19.6106634Z Hosted Compute Agent
2025-08-06T06:19:19.6107458Z Version: 20250711.363
2025-08-06T06:19:19.6108401Z Commit: 6785254374ce925a23743850c1cb91912ce5c14c
2025-08-06T06:19:19.6109473Z Build Date: 2025-07-11T20:04:25Z
2025-08-06T06:19:19.6110340Z ##[endgroup]
2025-08-06T06:19:19.6111035Z ##[group]Operating System
2025-08-06T06:19:19.6111975Z Microsoft Windows Server 2022
2025-08-06T06:19:19.6112733Z 10.0.20348
2025-08-06T06:19:19.6113493Z Datacenter
2025-08-06T06:19:19.6114174Z ##[endgroup]
2025-08-06T06:19:19.6114823Z ##[group]Runner Image
2025-08-06T06:19:19.6115638Z Image: windows-2022
2025-08-06T06:19:19.6116394Z Version: 20250727.1.0
2025-08-06T06:19:19.6118201Z Included Software: https://github.com/actions/runner-images/blob/win22/20250727.1/images/windows/Windows2022-Readme.md
2025-08-06T06:19:19.6121241Z Image Release: https://github.com/actions/runner-images/releases/tag/win22%2F20250727.1
2025-08-06T06:19:19.6122863Z ##[endgroup]
2025-08-06T06:19:19.6124509Z ##[group]GITHUB_TOKEN Permissions
2025-08-06T06:19:19.6127199Z Contents: write
2025-08-06T06:19:19.6127929Z Metadata: read
2025-08-06T06:19:19.6128695Z ##[endgroup]
2025-08-06T06:19:19.6131579Z Secret source: Actions
2025-08-06T06:19:19.6132615Z Prepare workflow directory
2025-08-06T06:19:19.6562376Z Prepare all required actions
2025-08-06T06:19:19.6616502Z Getting action download info
2025-08-06T06:19:19.9316908Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-08-06T06:19:19.9317823Z Version: 4.2.2
2025-08-06T06:19:19.9318666Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-08-06T06:19:19.9319672Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-08-06T06:19:19.9320323Z ##[endgroup]
2025-08-06T06:19:20.0620510Z Download action repository 'dtolnay/rust-toolchain@stable' (SHA:4305c38b25d97ef35a8ad1f985ccf2d2242004f2)
2025-08-06T06:19:20.2864886Z Download action repository 'swatinem/rust-cache@v2' (SHA:98c8021b550208e191a6a3145459bfc9fb29c4c0)
2025-08-06T06:19:20.5254093Z ##[group]Download immutable action package 'actions/setup-node@v4'
2025-08-06T06:19:20.5254741Z Version: 4.4.0
2025-08-06T06:19:20.5255320Z Digest: sha256:9427cefe82346e992fb5b949e3569b39d537ae41aa3086483b14eceebfc16bc1
2025-08-06T06:19:20.5256105Z Source commit SHA: 49933ea5288caeca8642d1e84afbd3f7d6820020
2025-08-06T06:19:20.5256651Z ##[endgroup]
2025-08-06T06:19:20.6950558Z Download action repository 'tauri-apps/tauri-action@v0' (SHA:564aea5a8075c7a54c167bb0cf5b3255314a7f9d)
2025-08-06T06:20:44.6599106Z Complete job name: build (windows-latest)
2025-08-06T06:20:44.8181426Z ##[group]Run actions/checkout@v4
2025-08-06T06:20:44.8182388Z with:
2025-08-06T06:20:44.8182773Z   repository: Panolix/FilmGrainPro
2025-08-06T06:20:44.8183479Z   token: ***
2025-08-06T06:20:44.8183832Z   ssh-strict: true
2025-08-06T06:20:44.8184214Z   ssh-user: git
2025-08-06T06:20:44.8184631Z   persist-credentials: true
2025-08-06T06:20:44.8185061Z   clean: true
2025-08-06T06:20:44.8185449Z   sparse-checkout-cone-mode: true
2025-08-06T06:20:44.8185905Z   fetch-depth: 1
2025-08-06T06:20:44.8186295Z   fetch-tags: false
2025-08-06T06:20:44.8186650Z   show-progress: true
2025-08-06T06:20:44.8187041Z   lfs: false
2025-08-06T06:20:44.8187387Z   submodules: false
2025-08-06T06:20:44.8187803Z   set-safe-directory: true
2025-08-06T06:20:44.8188436Z ##[endgroup]
2025-08-06T06:20:44.9903470Z Syncing repository: Panolix/FilmGrainPro
2025-08-06T06:20:44.9905260Z ##[group]Getting Git version info
2025-08-06T06:20:44.9905913Z Working directory is 'D:\a\FilmGrainPro\FilmGrainPro'
2025-08-06T06:20:45.0920850Z [command]"C:\Program Files\Git\bin\git.exe" version
2025-08-06T06:20:45.4771186Z git version 2.50.1.windows.1
2025-08-06T06:20:45.4821169Z ##[endgroup]
2025-08-06T06:20:45.4909769Z Temporarily overriding HOME='D:\a\_temp\1c32944d-067f-40af-a81e-24fa72a44f88' before making global git config changes
2025-08-06T06:20:45.4913908Z Adding repository directory to the temporary git global config as a safe directory
2025-08-06T06:20:45.4915216Z [command]"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\FilmGrainPro\FilmGrainPro
2025-08-06T06:20:45.5366385Z Deleting the contents of 'D:\a\FilmGrainPro\FilmGrainPro'
2025-08-06T06:20:45.5371802Z ##[group]Initializing the repository
2025-08-06T06:20:45.5381442Z [command]"C:\Program Files\Git\bin\git.exe" init D:\a\FilmGrainPro\FilmGrainPro
2025-08-06T06:20:45.5934303Z Initialized empty Git repository in D:/a/FilmGrainPro/FilmGrainPro/.git/
2025-08-06T06:20:45.5967171Z [command]"C:\Program Files\Git\bin\git.exe" remote add origin https://github.com/Panolix/FilmGrainPro
2025-08-06T06:20:45.6419080Z ##[endgroup]
2025-08-06T06:20:45.6419626Z ##[group]Disabling automatic garbage collection
2025-08-06T06:20:45.6428351Z [command]"C:\Program Files\Git\bin\git.exe" config --local gc.auto 0
2025-08-06T06:20:45.6704173Z ##[endgroup]
2025-08-06T06:20:45.6704630Z ##[group]Setting up auth
2025-08-06T06:20:45.6717005Z [command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
2025-08-06T06:20:45.6939406Z [command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
2025-08-06T06:20:46.9578122Z [command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-08-06T06:20:46.9799802Z [command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
2025-08-06T06:20:47.3870212Z [command]"C:\Program Files\Git\bin\git.exe" config --local http.https://github.com/.extraheader "AUTHORIZATION: basic ***"
2025-08-06T06:20:47.4104730Z ##[endgroup]
2025-08-06T06:20:47.4105219Z ##[group]Fetching the repository
2025-08-06T06:20:47.4118015Z [command]"C:\Program Files\Git\bin\git.exe" -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +28552316a578a760c28f974610a725c480125a99:refs/tags/v1.0.0
2025-08-06T06:20:48.2571672Z From https://github.com/Panolix/FilmGrainPro
2025-08-06T06:20:48.2572536Z  * [new ref]         28552316a578a760c28f974610a725c480125a99 -> v1.0.0
2025-08-06T06:20:48.2840932Z ##[endgroup]
2025-08-06T06:20:48.2841735Z ##[group]Determining the checkout info
2025-08-06T06:20:48.2844893Z ##[endgroup]
2025-08-06T06:20:48.2858345Z [command]"C:\Program Files\Git\bin\git.exe" sparse-checkout disable
2025-08-06T06:20:48.3178359Z [command]"C:\Program Files\Git\bin\git.exe" config --local --unset-all extensions.worktreeConfig
2025-08-06T06:20:48.3402938Z ##[group]Checking out the ref
2025-08-06T06:20:48.3412020Z [command]"C:\Program Files\Git\bin\git.exe" checkout --progress --force refs/tags/v1.0.0
2025-08-06T06:20:48.4041710Z Note: switching to 'refs/tags/v1.0.0'.
2025-08-06T06:20:48.4042219Z 
2025-08-06T06:20:48.4042550Z You are in 'detached HEAD' state. You can look around, make experimental
2025-08-06T06:20:48.4043120Z changes and commit them, and you can discard any commits you make in this
2025-08-06T06:20:48.4043591Z state without impacting any branches by switching back to a branch.
2025-08-06T06:20:48.4043864Z 
2025-08-06T06:20:48.4044024Z If you want to create a new branch to retain commits you create, you may
2025-08-06T06:20:48.4044442Z do so (now or later) by using -c with the switch command. Example:
2025-08-06T06:20:48.4044757Z 
2025-08-06T06:20:48.4044857Z   git switch -c <new-branch-name>
2025-08-06T06:20:48.4045019Z 
2025-08-06T06:20:48.4045113Z Or undo this operation with:
2025-08-06T06:20:48.4045255Z 
2025-08-06T06:20:48.4045328Z   git switch -
2025-08-06T06:20:48.4045478Z 
2025-08-06T06:20:48.4045685Z Turn off this advice by setting config variable advice.detachedHead to false
2025-08-06T06:20:48.4046799Z 
2025-08-06T06:20:48.4046926Z HEAD is now at 2855231 Update application icon assets
2025-08-06T06:20:48.4075442Z ##[endgroup]
2025-08-06T06:20:48.4371087Z [command]"C:\Program Files\Git\bin\git.exe" log -1 --format=%H
2025-08-06T06:20:48.4565602Z 28552316a578a760c28f974610a725c480125a99
2025-08-06T06:20:48.5017666Z ##[group]Run dtolnay/rust-toolchain@stable
2025-08-06T06:20:48.5018037Z with:
2025-08-06T06:20:48.5018201Z   toolchain: stable
2025-08-06T06:20:48.5018384Z ##[endgroup]
2025-08-06T06:20:48.5195664Z ##[group]Run : parse toolchain version
2025-08-06T06:20:48.5195992Z [36;1m: parse toolchain version[0m
2025-08-06T06:20:48.5196338Z [36;1mif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then[0m
2025-08-06T06:20:48.5196693Z [36;1m  if [[ Windows == macOS ]]; then[0m
2025-08-06T06:20:48.5197140Z [36;1m    echo "toolchain=1.$((($(date -v-$(sed 's/stable \([0-9]*\) \(.\).*/\1\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:48.5197596Z [36;1m  else[0m
2025-08-06T06:20:48.5197930Z [36;1m    echo "toolchain=1.$((($(date --date "${toolchain#stable }" +%s)/60/60/24-16569)/7/6))" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:48.5198315Z [36;1m  fi[0m
2025-08-06T06:20:48.5198598Z [36;1melif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then[0m
2025-08-06T06:20:48.5199060Z [36;1m  echo "toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:48.5199453Z [36;1melif [[ $toolchain =~ ^1\.[0-9]+$ ]]; then[0m
2025-08-06T06:20:48.5199899Z [36;1m  echo "toolchain=1.$((i=${toolchain#1.}, c=($(date +%s)/60/60/24-16569)/7/6, i+9*i*(10*i<=c)+90*i*(100*i<=c)))" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:48.5200307Z [36;1melse[0m
2025-08-06T06:20:48.5200505Z [36;1m  echo "toolchain=$toolchain" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:48.5200754Z [36;1mfi[0m
2025-08-06T06:20:48.5215790Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:48.5216174Z env:
2025-08-06T06:20:48.5216322Z   toolchain: stable
2025-08-06T06:20:48.5216488Z ##[endgroup]
2025-08-06T06:20:48.6628243Z ##[group]Run : construct rustup command line
2025-08-06T06:20:48.6628555Z [36;1m: construct rustup command line[0m
2025-08-06T06:20:48.6628975Z [36;1mecho "targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:48.6629541Z [36;1mecho "components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:48.6629960Z [36;1mecho "downgrade=" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:48.6641239Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:48.6641603Z env:
2025-08-06T06:20:48.6641747Z   targets: 
2025-08-06T06:20:48.6641943Z   components: 
2025-08-06T06:20:48.6642123Z ##[endgroup]
2025-08-06T06:20:48.7181375Z ##[group]Run : set $CARGO_HOME
2025-08-06T06:20:48.7181702Z [36;1m: set $CARGO_HOME[0m
2025-08-06T06:20:48.7182076Z [36;1mecho CARGO_HOME=${CARGO_HOME:-"$USERPROFILE\.cargo"} >> $GITHUB_ENV[0m
2025-08-06T06:20:48.7193937Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:48.7194312Z ##[endgroup]
2025-08-06T06:20:48.7567544Z ##[group]Run : install rustup if needed on windows
2025-08-06T06:20:48.7567872Z [36;1m: install rustup if needed on windows[0m
2025-08-06T06:20:48.7568142Z [36;1mif ! command -v rustup &>/dev/null; then[0m
2025-08-06T06:20:48.7568829Z [36;1m  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused --location --silent --show-error --fail https://win.rustup.rs/x86_64 --output 'D:\a\_temp\rustup-init.exe'[0m
2025-08-06T06:20:48.7569593Z [36;1m  'D:\a\_temp\rustup-init.exe' --default-toolchain none --no-modify-path -y[0m
2025-08-06T06:20:48.7569961Z [36;1m  echo "$CARGO_HOME\bin" >> $GITHUB_PATH[0m
2025-08-06T06:20:48.7570350Z [36;1mfi[0m
2025-08-06T06:20:48.7581497Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:48.7581930Z env:
2025-08-06T06:20:48.7582113Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:48.7582348Z ##[endgroup]
2025-08-06T06:20:48.8022524Z ##[group]Run rustup toolchain install stable --profile minimal --no-self-update
2025-08-06T06:20:48.8023115Z [36;1mrustup toolchain install stable --profile minimal --no-self-update[0m
2025-08-06T06:20:48.8034739Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:48.8035107Z env:
2025-08-06T06:20:48.8035274Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:48.8035514Z ##[endgroup]
2025-08-06T06:20:52.6864094Z info: syncing channel updates for 'stable-x86_64-pc-windows-msvc'
2025-08-06T06:20:53.0467727Z 
2025-08-06T06:20:53.0627346Z   stable-x86_64-pc-windows-msvc unchanged - rustc 1.88.0 (6b00bc388 2025-06-23)
2025-08-06T06:20:53.0628016Z 
2025-08-06T06:20:53.0791834Z ##[group]Run rustup default stable
2025-08-06T06:20:53.0792132Z [36;1mrustup default stable[0m
2025-08-06T06:20:53.0802911Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:53.0803267Z env:
2025-08-06T06:20:53.0803440Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:53.0803684Z ##[endgroup]
2025-08-06T06:20:53.1331678Z info: using existing install for 'stable-x86_64-pc-windows-msvc'
2025-08-06T06:20:53.1898678Z info: default toolchain set to 'stable-x86_64-pc-windows-msvc'
2025-08-06T06:20:53.1899060Z 
2025-08-06T06:20:53.2054636Z   stable-x86_64-pc-windows-msvc unchanged - rustc 1.88.0 (6b00bc388 2025-06-23)
2025-08-06T06:20:53.2054989Z 
2025-08-06T06:20:53.2223222Z ##[group]Run : create cachekey
2025-08-06T06:20:53.2223473Z [36;1m: create cachekey[0m
2025-08-06T06:20:53.2223908Z [36;1mDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \(20[0-9][0-9]\)-\([01][0-9]\)-\([0-3][0-9]\)$/\1\2\3/p')[0m
2025-08-06T06:20:53.2224493Z [36;1mHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')[0m
2025-08-06T06:20:53.2224933Z [36;1mecho "cachekey=$(echo $DATE$HASH | head -c12)" >> $GITHUB_OUTPUT[0m
2025-08-06T06:20:53.2235564Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:53.2235913Z env:
2025-08-06T06:20:53.2236097Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:53.2236325Z ##[endgroup]
2025-08-06T06:20:54.0639711Z ##[group]Run : disable incremental compilation
2025-08-06T06:20:54.0640015Z [36;1m: disable incremental compilation[0m
2025-08-06T06:20:54.0640297Z [36;1mif [ -z "${CARGO_INCREMENTAL+set}" ]; then[0m
2025-08-06T06:20:54.0640584Z [36;1m  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV[0m
2025-08-06T06:20:54.0640814Z [36;1mfi[0m
2025-08-06T06:20:54.0652125Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:54.0652487Z env:
2025-08-06T06:20:54.0652668Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:54.0652897Z ##[endgroup]
2025-08-06T06:20:54.1022799Z ##[group]Run : enable colors in Cargo output
2025-08-06T06:20:54.1023082Z [36;1m: enable colors in Cargo output[0m
2025-08-06T06:20:54.1023353Z [36;1mif [ -z "${CARGO_TERM_COLOR+set}" ]; then[0m
2025-08-06T06:20:54.1023659Z [36;1m  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV[0m
2025-08-06T06:20:54.1023909Z [36;1mfi[0m
2025-08-06T06:20:54.1034404Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:54.1034764Z env:
2025-08-06T06:20:54.1034930Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:54.1035164Z   CARGO_INCREMENTAL: 0
2025-08-06T06:20:54.1035331Z ##[endgroup]
2025-08-06T06:20:54.1407784Z ##[group]Run : enable Cargo sparse registry
2025-08-06T06:20:54.1408280Z [36;1m: enable Cargo sparse registry[0m
2025-08-06T06:20:54.1408853Z [36;1m# implemented in 1.66, stabilized in 1.68, made default in 1.70[0m
2025-08-06T06:20:54.1410080Z [36;1mif [ -z "${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}" -o -f "D:\a\_temp"/.implicit_cargo_registries_crates_io_protocol ]; then[0m
2025-08-06T06:20:54.1411173Z [36;1m  if rustc +stable --version --verbose | grep -q '^release: 1\.6[89]\.'; then[0m
2025-08-06T06:20:54.1413209Z [36;1m    touch "D:\a\_temp"/.implicit_cargo_registries_crates_io_protocol || true[0m
2025-08-06T06:20:54.1414066Z [36;1m    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV[0m
2025-08-06T06:20:54.1414860Z [36;1m  elif rustc +stable --version --verbose | grep -q '^release: 1\.6[67]\.'; then[0m
2025-08-06T06:20:54.1415685Z [36;1m    touch "D:\a\_temp"/.implicit_cargo_registries_crates_io_protocol || true[0m
2025-08-06T06:20:54.1416442Z [36;1m    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV[0m
2025-08-06T06:20:54.1416990Z [36;1m  fi[0m
2025-08-06T06:20:54.1417248Z [36;1mfi[0m
2025-08-06T06:20:54.1437112Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:54.1437745Z env:
2025-08-06T06:20:54.1438028Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:54.1438455Z   CARGO_INCREMENTAL: 0
2025-08-06T06:20:54.1438769Z   CARGO_TERM_COLOR: always
2025-08-06T06:20:54.1439096Z ##[endgroup]
2025-08-06T06:20:54.3113134Z ##[group]Run : work around spurious network errors in curl 8.0
2025-08-06T06:20:54.3113522Z [36;1m: work around spurious network errors in curl 8.0[0m
2025-08-06T06:20:54.3114017Z [36;1m# https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/timeout.20investigation[0m
2025-08-06T06:20:54.3114569Z [36;1mif rustc +stable --version --verbose | grep -q '^release: 1\.7[01]\.'; then[0m
2025-08-06T06:20:54.3114964Z [36;1m  echo CARGO_HTTP_MULTIPLEXING=false >> $GITHUB_ENV[0m
2025-08-06T06:20:54.3115228Z [36;1mfi[0m
2025-08-06T06:20:54.3125623Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:54.3125977Z env:
2025-08-06T06:20:54.3126158Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:54.3126413Z   CARGO_INCREMENTAL: 0
2025-08-06T06:20:54.3126590Z   CARGO_TERM_COLOR: always
2025-08-06T06:20:54.3126776Z ##[endgroup]
2025-08-06T06:20:54.4154442Z ##[group]Run rustc +stable --version --verbose
2025-08-06T06:20:54.4154754Z [36;1mrustc +stable --version --verbose[0m
2025-08-06T06:20:54.4165033Z shell: C:\Program Files\Git\bin\bash.EXE --noprofile --norc -e -o pipefail {0}
2025-08-06T06:20:54.4165393Z env:
2025-08-06T06:20:54.4165563Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:54.4165799Z   CARGO_INCREMENTAL: 0
2025-08-06T06:20:54.4165980Z   CARGO_TERM_COLOR: always
2025-08-06T06:20:54.4166151Z ##[endgroup]
2025-08-06T06:20:54.4818425Z rustc 1.88.0 (6b00bc388 2025-06-23)
2025-08-06T06:20:54.4818886Z binary: rustc
2025-08-06T06:20:54.4819295Z commit-hash: 6b00bc3880198600130e1cf62b8f8a93494488cc
2025-08-06T06:20:54.4819728Z commit-date: 2025-06-23
2025-08-06T06:20:54.4819967Z host: x86_64-pc-windows-msvc
2025-08-06T06:20:54.4820244Z release: 1.88.0
2025-08-06T06:20:54.4821452Z LLVM version: 20.1.5
2025-08-06T06:20:54.5056911Z ##[group]Run swatinem/rust-cache@v2
2025-08-06T06:20:54.5057210Z with:
2025-08-06T06:20:54.5057378Z   workspaces: ./src-tauri -> target
2025-08-06T06:20:54.5057595Z   prefix-key: v0-rust
2025-08-06T06:20:54.5057782Z   cache-targets: true
2025-08-06T06:20:54.5057956Z   cache-all-crates: false
2025-08-06T06:20:54.5058156Z   cache-workspace-crates: false
2025-08-06T06:20:54.5058344Z   save-if: true
2025-08-06T06:20:54.5058507Z   cache-provider: github
2025-08-06T06:20:54.5058680Z   cache-bin: true
2025-08-06T06:20:54.5058847Z   lookup-only: false
2025-08-06T06:20:54.5059000Z env:
2025-08-06T06:20:54.5059159Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:54.5059390Z   CARGO_INCREMENTAL: 0
2025-08-06T06:20:54.5059560Z   CARGO_TERM_COLOR: always
2025-08-06T06:20:54.5059740Z ##[endgroup]
2025-08-06T06:20:55.1633488Z Error: The cwd: D:\a\FilmGrainPro\FilmGrainPro\src-tauri does not exist!
2025-08-06T06:20:55.1635851Z     at ToolRunner.<anonymous> (D:\a\_actions\swatinem\rust-cache\v2\dist\restore\index.js:9546:35)
2025-08-06T06:20:55.1636851Z     at Generator.next (<anonymous>)
2025-08-06T06:20:55.1637765Z     at fulfilled (D:\a\_actions\swatinem\rust-cache\v2\dist\restore\index.js:9160:58) {
2025-08-06T06:20:55.1638743Z   commandFailed: {
2025-08-06T06:20:55.1639511Z     command: 'cargo metadata --all-features --format-version 1 --no-deps',
2025-08-06T06:20:55.1640402Z     stderr: ''
2025-08-06T06:20:55.1640792Z   }
2025-08-06T06:20:55.1641151Z }
2025-08-06T06:20:55.1799116Z ##[group]Cache Configuration
2025-08-06T06:20:55.1799507Z Cache Provider:
2025-08-06T06:20:55.1799774Z     github
2025-08-06T06:20:55.1800153Z Workspaces:
2025-08-06T06:20:55.1802030Z     D:\a\FilmGrainPro\FilmGrainPro\src-tauri
2025-08-06T06:20:55.1802573Z Cache Paths:
2025-08-06T06:20:55.1802969Z     C:\Users\runneradmin\.cargo\bin
2025-08-06T06:20:55.1803512Z     C:\Users\runneradmin\.cargo\.crates.toml
2025-08-06T06:20:55.1804086Z     C:\Users\runneradmin\.cargo\.crates2.json
2025-08-06T06:20:55.1804612Z     C:\Users\runneradmin\.cargo\registry
2025-08-06T06:20:55.1805132Z     C:\Users\runneradmin\.cargo\git
2025-08-06T06:20:55.1805699Z     D:\a\FilmGrainPro\FilmGrainPro\src-tauri\target
2025-08-06T06:20:55.1806299Z Restore Key:
2025-08-06T06:20:55.1806701Z     v0-rust-build-Windows_NT-x64-a719b7f3
2025-08-06T06:20:55.1807241Z Cache Key:
2025-08-06T06:20:55.1807683Z     v0-rust-build-Windows_NT-x64-a719b7f3-da39a3ee
2025-08-06T06:20:55.1808264Z .. Prefix:
2025-08-06T06:20:55.1808664Z   - v0-rust-build-Windows_NT-x64
2025-08-06T06:20:55.1809172Z .. Environment considered:
2025-08-06T06:20:55.1809974Z   - Rust Version: 1.88.0 x86_64-pc-windows-msvc (6b00bc3880198600130e1cf62b8f8a93494488cc)
2025-08-06T06:20:55.1810845Z   - CARGO_HOME
2025-08-06T06:20:55.1811249Z   - CARGO_INCREMENTAL
2025-08-06T06:20:55.1811682Z   - CARGO_TERM_COLOR
2025-08-06T06:20:55.1812098Z .. Lockfiles considered:
2025-08-06T06:20:55.1812934Z ##[endgroup]
2025-08-06T06:20:55.1813170Z 
2025-08-06T06:20:55.1813339Z ... Restoring cache ...
2025-08-06T06:20:55.4343968Z ##[warning]Cache not found for keys: v0-rust-build-Windows_NT-x64-a719b7f3-da39a3ee, v0-rust-build-Windows_NT-x64-a719b7f3
2025-08-06T06:20:55.4352165Z No cache found.
2025-08-06T06:20:55.4575032Z ##[group]Run actions/setup-node@v4
2025-08-06T06:20:55.4575321Z with:
2025-08-06T06:20:55.4575475Z   node-version: lts/*
2025-08-06T06:20:55.4575653Z   cache: npm
2025-08-06T06:20:55.4575805Z   always-auth: false
2025-08-06T06:20:55.4575973Z   check-latest: false
2025-08-06T06:20:55.4576325Z   token: ***
2025-08-06T06:20:55.4576471Z env:
2025-08-06T06:20:55.4576621Z   CARGO_HOME: C:\Users\runneradmin\.cargo
2025-08-06T06:20:55.4576859Z   CARGO_INCREMENTAL: 0
2025-08-06T06:20:55.4577039Z   CARGO_TERM_COLOR: always
2025-08-06T06:20:55.4577229Z   CACHE_ON_FAILURE: false
2025-08-06T06:20:55.4577404Z ##[endgroup]
2025-08-06T06:20:55.6763841Z Attempt to resolve LTS alias from manifest...
2025-08-06T06:20:56.0063943Z Found in cache @ C:\hostedtoolcache\windows\node\22.17.1\x64
2025-08-06T06:20:56.0072937Z ##[group]Environment details
2025-08-06T06:21:00.3228511Z node: v22.17.1
2025-08-06T06:21:00.3228775Z npm: 10.9.2
2025-08-06T06:21:00.3229650Z yarn: 1.22.22
2025-08-06T06:21:00.3231756Z ##[endgroup]
2025-08-06T06:21:00.4081721Z [command]C:\Windows\system32\cmd.exe /D /S /C "C:\hostedtoolcache\windows\node\22.17.1\x64\npm.cmd config get cache"
2025-08-06T06:21:00.9438328Z C:\npm\cache
2025-08-06T06:21:00.9845789Z ##[error]Dependencies lock file is not found in D:\a\FilmGrainPro\FilmGrainPro. Supported file patterns: package-lock.json,npm-shrinkwrap.json,yarn.lock
2025-08-06T06:21:01.0084770Z Post job cleanup.
2025-08-06T06:21:01.2226238Z [command]"C:\Program Files\Git\bin\git.exe" version
2025-08-06T06:21:01.2447606Z git version 2.50.1.windows.1
2025-08-06T06:21:01.2519959Z Temporarily overriding HOME='D:\a\_temp\c5aaea79-c094-4a0a-b84d-8e4d55cae2bf' before making global git config changes
2025-08-06T06:21:01.2521445Z Adding repository directory to the temporary git global config as a safe directory
2025-08-06T06:21:01.2532319Z [command]"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\FilmGrainPro\FilmGrainPro
2025-08-06T06:21:01.2803376Z [command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
2025-08-06T06:21:01.3077155Z [command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
2025-08-06T06:21:01.7112144Z [command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-08-06T06:21:01.7305496Z http.https://github.com/.extraheader
2025-08-06T06:21:01.7339871Z [command]"C:\Program Files\Git\bin\git.exe" config --local --unset-all http.https://github.com/.extraheader
2025-08-06T06:21:01.7560474Z [command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
2025-08-06T06:21:02.2080557Z Cleaning up orphan processes